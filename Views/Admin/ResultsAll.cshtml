@model WePlayBall.Models.Helpers.PagedResult<WePlayBall.Models.GameResult>

@{
    ViewData["Title"] = "Results";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section DefaultHeader{
    <ul class="uk-breadcrumb">
        <li>
            <a asp-controller="Admin" asp-action="Index">All</a>
        </li>
    </ul>
}


<table class="uk-table uk-table-divide uk-table-hover">
    <thead>
        <tr>
            <th>
                Date
            </th>
            <th>
                Home Team Name
            </th>
            <th>
                Away Team Name
            </th>
            <th>
                Score
            </th>
            <th>
                Winner
            </th>
            <th>
                Division Code
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Results)
        {
            <tr>
                <td>
                    @item.TimeStamp.ToLongDateString()
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HomeTeamName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AwayTeamName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Score)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WinningTeamName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubDivision.SubDivisionCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubDivision.Division.DivisionCode)
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var urlTemplate = Url.Action() + "?page={0}";
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "page")
        {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key];
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);
}

<div class="row">
    <div class="col-md-8 col-sm-8 items-info">
        Items @Model.FirstRowOnPage to @Model.LastRowOnPage of @Model.RowCount total
    </div>
</div>


<div>
    @if (Model.PageCount > 1)
    {
        <ul class="uk-pagination uk-flex-center">
            <li><a href="@urlTemplate.Replace("{0}", "1")">&laquo;</a></li>
            @for (var i = startIndex; i <= finishIndex; i++)
            {
                if (i == Model.CurrentPage)
                {

                    <li class="uk-active"><span>@i</span></li>
                }
                else
                {

                    <li><a href="@urlTemplate.Replace("{0}", i.ToString())">@i</a></li>
                }
            }
            <li><a href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())">&raquo;</a></li>
        </ul>

    }
</div>